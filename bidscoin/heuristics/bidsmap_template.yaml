# --------------------------------------------------------------------------------
# This is a bidsmap YAML file with the key-value mappings for the different BIDS
# datatypes (anat, func, dwi, etc). The datatype attributes are the keys that map
# onto the BIDS labels. The bidsmap data-structure should be 5 levels deep:
#
# dict       : dict     : list     : dict        : dict
# dataformat : datatype : run-item : bidsmapping : mapping-data
#
# NB:
# 1) Edit the bidsmap file to your needs before feeding it to bidscoiner.py
# 2) (Institute) users may create their own bidsmap_[template].yaml or
#    bidsmap_[sample].yaml file
#
# For more information, see: https://bidscoin.readthedocs.io
# --------------------------------------------------------------------------------


Options:
# --------------------------------------------------------------------------------
# General options and plugins
# --------------------------------------------------------------------------------
  bidscoin:
    version: '3.6.2'              # BIDScoin version (should correspond with the version in ../bidscoin/version.txt)
    bidsignore: extra_data/       # Semicolon-separated list of entries that are added to the .bidsignore file (for more info, see BIDS specifications), e.g. extra_data/;pet/;myfile.txt;yourfile.csv
  plugins:                        # List of plugins with plugin-specific key-value pairs (that can be used by the plugin)
    README: ~                     # The plugin basename that is installed in the default bidscoin/plugins folder
    dcm2bidsmap: ~                # The default plugin that is used by the bidsmapper to map DICOM and PAR/REC source data
    dcm2niix2bids:                # See dcm2niix -h and https://www.nitrc.org/plugins/mwiki/index.php/dcm2nii:MainPage#General_Usage for more info
      path: module add dcm2niix;  # Command to set the path to dcm2niix (note the semi-colon), e.g. module add dcm2niix/1.0.20180622; or PATH=/opt/dcm2niix/bin:$PATH; or /opt/dcm2niix/bin/ or '"C:\Program Files\dcm2niix\"' (note the quotes to deal with the whitespace)
      args: -b y -z y -i n        # Argument string that is passed to dcm2niix. Tip: SPM users may want to use '-z n' (which produces unzipped nifti's, see dcm2niix -h for more information)


DICOM:
# --------------------------------------------------------------------------------
# DICOM key-value heuristics (DICOM fields that are mapped to the BIDS labels)
# --------------------------------------------------------------------------------
  subject: <<SourceFilePath>>     # <<SourceFilePath>> extracts the subject label from the source directory during bidscoiner runtime. A DICOM attribute can also be used as subject-label instead, e.g. <PatientID>
  session: <<SourceFilePath>>     # <<SourceFilePath>> extracts the session label from the source directory during bidscoiner runtime. A DICOM attribute can also be used as session-label instead, e.g. <StudyID>

  anat:       # ----------------------- All anatomical runs --------------------
  - provenance: ~                 # The fullpath name of the DICOM file from which the attributes are read. Serves also as a look-up key to find a run in the bidsmap
    filesystem: &fileattr         # This is an optional (stub) entry of filesystem matching (could be added to any run-item)
      path: ~                     # File folder, e.g. ".*Parkinson.*" or ".*(phantom|bottle).*"
      name: ~                     # File name, e.g. ".*fmap.*" or ".*(fmap|field.?map|B0.?map).*"
      size: ~                     # File size, e.g. "2[4-6]\d MB" for matching files between 240-269 MB
      nrfiles: ~                  # Number of files in the folder that match the above criteria, e.g. "5/d/d" for matching a number between 500-599
    attributes: &anat_dicomattr   # An empty / non-matching reference dictionary that can be derefenced in other run-items of this data type
      Modality: ~
      ProtocolName: ~
      SeriesDescription: ~
      ImageType: ~
      SequenceName: ~
      SequenceVariant: ~
      ScanningSequence: ~
      MRAcquisitionType: ~
      SliceThickness: ~
      FlipAngle: ~
      EchoNumbers: ~
      EchoTime: ~
      RepetitionTime: ~
      PhaseEncodingDirection: ~
    bids: &anat_dicoment_nonparametric  # See: schema/datatypes/anat.yaml
      acq: <SeriesDescription>    # This will be expanded by the bidsmapper (so the user can edit it)
      ce: ~
      rec: ~
      run: <<1>>                  # This will be updated during bidscoiner runtime (as it depends on the already existing files)
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: T1w
    meta:                         # This is an optional entry for meta-data that will be appended to the json sidecar files produced by dcm2niix
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_nonparametric
      suffix: T2w
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_nonparametric
      suffix: PDw
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_nonparametric
      suffix: T2starw
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_nonparametric
      suffix: FLAIR
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_nonparametric
      suffix: inplaneT1
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_nonparametric
      suffix: inplaneT2
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_nonparametric
      suffix: PDT2
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_nonparametric
      suffix: angio
  - provenance: ~
    attributes: *anat_dicomattr
    bids: &anat_dicoment_parametric     # See: schema/datatypes/anat.yaml
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      run: <<1>>
      suffix: T1map
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: T2map
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: T2starmap
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: R1map
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: R2map
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: R2starmap
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: PDmap
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: MTRmap
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: MTsat
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: UNIT1
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: T1rho
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: MWFmap
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: MTVmap
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: PDT2map
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: Chimap
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: S0map
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_parametric
      suffix: M0map
  - provenance: ~
    attributes: *anat_dicomattr
    bids: &anat_dicoment_defacemask     # See: schema/datatypes/anat.yaml
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      run: <<1>>
      mod: ~
      suffix: defacemask
  - provenance: ~
    attributes: *anat_dicomattr
    bids: &anat_dicoment_multiecho      # See: schema/datatypes/anat.yaml
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      run: <<1>>
      echo: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: MESE
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_multiecho
      suffix: MEGRE
  - provenance: ~
    attributes: *anat_dicomattr
    bids: &anat_dicoment_multiflip      # See: schema/datatypes/anat.yaml
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      run: <<1>>
      flip: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: VFA
  - provenance: ~
    attributes: *anat_dicomattr
    bids: &anat_dicoment_multiinv       # See: schema/datatypes/anat.yaml
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      run: <<1>>
      inv: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: IRT1
  - provenance: ~
    attributes: *anat_dicomattr
    bids: &anat_dicoment_mp2rage        # See: schema/datatypes/anat.yaml
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      run: <<1>>
      echo: ~
      flip: ~
      inv: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: MP2RAGE
  - provenance: ~
    attributes: *anat_dicomattr
    bids: &anat_dicoment_vfamt          # See: schema/datatypes/anat.yaml
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      run: <<1>>
      echo: ~
      flip: ~
      mt: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: MPM
  - provenance: ~
    attributes: *anat_dicomattr
    bids:
      <<: *anat_dicoment_vfamt
      suffix: MTS
  - provenance: ~
    attributes: *anat_dicomattr
    bids: &anat_dicoment_mtr            # See: schema/datatypes/anat.yaml
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      run: <<1>>
      mt: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: MTR

  func:       # ----------------------- All functional runs --------------------
  - provenance: ~
    attributes: &func_dicomattr
      Modality: ~
      ProtocolName: ~
      SeriesDescription: ~
      ImageType: ~
      SequenceName: ~
      SequenceVariant: ~
      ScanningSequence: ~
      MRAcquisitionType: ~
      SliceThickness: ~
      FlipAngle: ~
      EchoNumbers: ~
      EchoTime: ~
      RepetitionTime: ~
      PhaseEncodingDirection: ~
    bids: &func_dicoment_func           # See: schema/datatypes/func.yaml
      task: <SeriesDescription>
      acq: <ProtocolName>
      ce: ~
      dir: ~
      rec: ~
      run: <<1>>
      echo: <EchoNumbers>
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: bold
    meta:
      TaskName: <SeriesDescription>
  - provenance: ~
    attributes: *func_dicomattr
    bids:
      <<: *func_dicoment_func
      suffix: cbv
    meta:
      TaskName: <SeriesDescription>
  - provenance: ~
    attributes: *func_dicomattr
    bids:
      <<: *func_dicoment_func
      suffix: sbref
    meta:
      TaskName: <SeriesDescription>
  - provenance: ~
    attributes: *func_dicomattr
    bids: &func_dicoment_events         # See: schema/datatypes/func.yaml
      task: <SeriesDescription>
      acq: <ProtocolName>
      ce: ~
      dir: ~
      rec: ~
      run: <<1>>
      suffix: events
    meta:
      TaskName: <SeriesDescription>
  - provenance: ~
    attributes: *func_dicomattr
    bids: &func_dicoment_timeseries     # See: schema/datatypes/func.yaml
      task: <SeriesDescription>
      acq: <ProtocolName>
      ce: ~
      dir: ~
      rec: ~
      recording: ~
      run: <<1>>
      suffix: physio
    meta:
      TaskName: <SeriesDescription>
  - provenance: ~
    attributes: *func_dicomattr
    bids:
      <<: *func_dicoment_timeseries
      suffix: stim
    meta:
      TaskName: <SeriesDescription>

  perf:       # ----------------------- All perfusion runs ---------------------
  - provenance: ~
    attributes: &perf_dicomattr
      Modality: ~
      ProtocolName: ~
      SeriesDescription: ~
      ImageType: ~
      SequenceName: ~
      SequenceVariant: ~
      ScanningSequence: ~
      MRAcquisitionType: ~
      SliceThickness: ~
      FlipAngle: ~
      EchoNumbers: ~
      EchoTime: ~
      RepetitionTime: ~
      PhaseEncodingDirection: ~
    bids: &perf_dicoment_group1         # See: schema/datatypes/perf.yaml
      acq: <ProtocolName>
      rec: <SeriesDescription>
      dir: ~
      run: <<1>>
      suffix: asl
  - provenance: ~
    attributes: *perf_dicomattr
    bids:
      <<: *perf_dicoment_group1
      suffix: m0scan
  - provenance: ~
    attributes: *perf_dicomattr
    bids: &perf_dicoment_group2         # See: schema/datatypes/perf.yaml
      acq: <ProtocolName>
      rec: <SeriesDescription>
      dir: ~
      run: <<1>>
      suffix: aslcontext
  - provenance: ~
    attributes: *perf_dicomattr
    bids: &perf_dicoment_group3         # See: schema/datatypes/perf.yaml
      acq: <ProtocolName>
      rec: <SeriesDescription>
      run: <<1>>
      suffix: asllabeling

  dwi:        # ----------------------- All diffusion runs ---------------------
  - provenance: ~
    attributes: &dwi_dicomattr
      Modality: ~
      ProtocolName: ~
      SeriesDescription: ~
      ImageType: ~
      SequenceName: ~
      SequenceVariant: ~
      ScanningSequence: ~
      MRAcquisitionType: ~
      SliceThickness: ~
      FlipAngle: ~
      EchoNumbers: ~
      EchoTime: ~
      RepetitionTime: ~
      PhaseEncodingDirection: ~
    bids: &dwi_dicoment_DWI             # See: schema/datatypes/dwi.yaml
      acq: <SeriesDescription>
      dir: ~
      run: <<1>>
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: dwi
  - provenance: ~
    attributes: *dwi_dicomattr
    bids: &dwi_dicoment_sbref           # See: schema/datatypes/dwi.yaml
      acq: <SeriesDescription>
      dir: ~
      run: <<1>>
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: sbref
  - provenance: ~
    attributes: *dwi_dicomattr
    bids: &dwi_dicoment_physio          # Not (yet) in: schema/datatypes/dwi.yaml
      acq: <SeriesDescription>
      dir: ~
      run: <<1>>
      suffix: physio

  fmap:       # ----------------------- All fieldmap runs ----------------------
  - provenance: ~
    attributes: &fmap_dicomattr
      Modality: ~
      ProtocolName: ~
      SeriesDescription: ~
      ImageType: ~
      SequenceName: ~
      SequenceVariant: ~
      ScanningSequence: ~
      MRAcquisitionType: ~
      SliceThickness: ~
      FlipAngle: ~
      EchoNumbers: ~
      EchoTime: ~
      RepetitionTime: ~
      PhaseEncodingDirection: ~
    bids: &fmap_dicoment_fieldmaps      # See: schema/datatypes/fmap.yaml
      acq: <SeriesDescription>
      run: <<1>>
      suffix: phasediff
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids:
      <<: *fmap_dicoment_fieldmaps
      suffix: phase1
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids:
      <<: *fmap_dicoment_fieldmaps
      suffix: phase2
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids:
      <<: *fmap_dicoment_fieldmaps
      suffix: magnitude1
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids:
      <<: *fmap_dicoment_fieldmaps
      suffix: magnitude2
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids:
      <<: *fmap_dicoment_fieldmaps
      suffix: magnitude
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids:
      <<: *fmap_dicoment_fieldmaps
      suffix: fieldmap
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids: &fmap_dicoment_PEPolar        # See: schema/datatypes/fmap.yaml
      acq: <SeriesDescription>
      ce: ~
      dir: ~
      run: <<1>>
      suffix: epi
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids:
      <<: *fmap_dicoment_PEPolar
      suffix: m0scan
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids: &fmap_dicoment_TB1DAM         # See: schema/datatypes/fmap.yaml
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      flip: ~
      inv: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      run: <<1>>
      suffix: TB1DAM
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids: &fmap_dicoment_TB1EPI         # See: schema/datatypes/fmap.yaml
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      flip: ~
      echo: ~
      inv: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      run: <<1>>
      suffix: TB1EPI
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids: &fmap_dicoment_RFFieldMaps    # See: schema/datatypes/fmap.yaml
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      flip: ~
      echo: ~
      inv: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      run: <<1>>
      suffix: TB1AFI
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids:
      <<: *fmap_dicoment_RFFieldMaps    # See: schema/datatypes/fmap.yaml
      suffix: TB1TFL
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids:
      <<: *fmap_dicoment_RFFieldMaps    # See: schema/datatypes/fmap.yaml
      suffix: TB1RFM
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids:
      <<: *fmap_dicoment_RFFieldMaps    # See: schema/datatypes/fmap.yaml
      suffix: RB1COR
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_dicomattr
    bids: &fmap_dicoment_TB1SRGE        # See: schema/datatypes/fmap.yaml
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      flip: ~
      echo: ~
      inv: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      run: <<1>>
      suffix: TB1SRGE
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes:
      <<: *fmap_dicomattr
      SeriesDescription: ~
      ImageType: 'FLIP ANGLE MAP'
    bids: &fmap_dicoment_parametric
      acq: <SeriesDescription>
      ce: ~
      rec: ~
      run: <<1>>
      suffix: TB1map
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes:
      <<: *fmap_dicomattr
      SeriesDescription: ~
    bids:
      <<: *fmap_dicoment_parametric
      suffix: RB1map
    meta:
      IntendedFor: ~

  pet:        # ----------------------- All PET runs ---------------------------
  - provenance: ~
    attributes: &pet_dicomattr
      Modality: PT
      StudyDescription: ~
      SeriesDescription: ~
      SeriesType: ~
      Radiopharmaceutical: ~
      ReconstructionMethod: ~
      ImageType: ~
      NumberOfSlices: ~
      NumberOfTimeSlices: ~
      SliceThickness: ~
      PixelSpacing: ~
      Rows: ~
      Columns: ~
    bids: &pet_dicoment_group1
      task: <SeriesDescription>
      trc: <Radiopharmaceutical>
      rec: ['', 'acdyn', 'acstat', 'nacdyn', 'nacstat', 0]
      run: <<1>>
      suffix: pet
  - provenance: ~
    attributes: *pet_dicomattr
    bids:
      <<: *pet_dicoment_group1
      suffix: events
  - provenance: ~
    attributes: *pet_dicomattr
    bids:
      <<: *pet_dicoment_group1
      recording: ~
      suffix: blood

  eeg:        # ----------------------- All EEG data ---------------------------
  - provenance: ~
    attributes:
      Modality: EEG
      ProtocolName: ~
      SeriesDescription: ~
    bids:                               # See: schema/datatypes/eeg.yaml
      acq: <ProtocolName>
      task: <SeriesDescription>
      run: <<1>>
      suffix: eeg

  ieeg:       # ----------------------- All iEEG data --------------------------
  - provenance: ~
    attributes:
      Modality: EEG
      ProtocolName: ~
      SeriesDescription: ~
    bids:                               # See: schema/datatypes/ieeg.yaml
      acq: <ProtocolName>
      task: <SeriesDescription>
      run: <<1>>
      suffix: ieeg

  beh:        # ----------------------- All behavioural data -------------------
  - provenance: ~
    attributes: &beh_dicomattr
      Modality: ~
      ProtocolName: ~
      SeriesDescription: ~
    bids: &beh_dicoment_group1          # See: schema/datatypes/beh.yaml
      task: <SeriesDescription>
      acq: ~
      recording: ~
      run: ~
      suffix: physio
  - provenance: ~
    attributes: *beh_dicomattr
    bids:
      <<: *beh_dicoment_group1
      suffix: stim
  - provenance: ~
    attributes: *beh_dicomattr
    bids: &beh_dicoment_group2          # See: schema/datatypes/beh.yaml
      task: <SeriesDescription>
      acq: ~
      run: ~
      suffix: events
  - provenance: ~
    attributes: *beh_dicomattr
    bids:
      <<: *beh_dicoment_group2
      suffix: beh

  extra_data: # ----------------------- All extra data -------------------------
  - provenance: ~
    attributes:
      Modality: ~
      ProtocolName: ~
      SeriesDescription: ~
      ImageType: ~
      SequenceName: ~
      SequenceVariant: ~
      ScanningSequence: ~
      MRAcquisitionType: ~
      SliceThickness: ~
      FlipAngle: ~
      EchoNumbers: ~
      EchoTime: ~
      RepetitionTime: ~
      PhaseEncodingDirection: ~
    bids:
      acq: <ProtocolName>
      inv: ~
      rec: <MRAcquisitionType><ImageType>
      ce: ~
      task: ~
      echo: <EchoNumbers>
      dir: ~
      run: <<1>>
      mod: <SeriesDescription>
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: <ScanningSequence>

  exclude:    # ----------------------- Data that will be left out -------------
  - provenance: ~
    attributes:
      Modality: ~
      ProtocolName: ~
      SeriesDescription: ~
      ImageType: ~
      SequenceName: ~
      SequenceVariant: ~
      ScanningSequence: ~
      MRAcquisitionType: ~
      SliceThickness: ~
      FlipAngle: ~
      EchoNumbers: ~
      EchoTime: ~
      RepetitionTime: ~
      PhaseEncodingDirection: ~
    bids:
      acq: <ProtocolName>
      rec: <ImageType>
      task: <SeriesDescription>
      echo: <EchoNumbers>
      mod: <MRAcquisitionType>
      suffix: <ScanningSequence>


PAR:
# --------------------------------------------------------------------------------
# PAR key-value heuristics (Philips PAR fields that are mapped to the BIDS labels)
# --------------------------------------------------------------------------------
  subject: <<SourceFilePath>>     # <<SourceFilePath>> extracts the subject label from the source directory during bidscoiner runtime. A PAR attribute can also be used as subject-label instead, e.g. <patient_name>
  session: <<SourceFilePath>>     # <<SourceFilePath>> extracts the session label from the source directory during bidscoiner runtime. A PAR attribute can also be used as session-label instead, e.g. <examination_name>

  anat:       # ----------------------- All anatomical runs --------------------
  - provenance: ~                 # The fullpath name of the PAR file from which the attributes are read. Serves also as a look-up key to find a run in the bidsmap
    attributes: &anat_parattr
      series_type: ~
      exam_name: ~
      protocol_name: ~
      tech: ~
      diffusion: ~
      fov: ~
      scan_resolution: ~
      scan_mode: ~
      max_slices: ~
      flow_compensation: ~
      max_echoes: ~
      repetition_time: ~
      prep_direction: ~
    bids: &anat_parent_nonparametric    # See: schema/datatypes/anat.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      run: <<1>>
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: T1w
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_nonparametric
      suffix: T2w
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_nonparametric
      suffix: PDw
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_nonparametric
      suffix: T2starw
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_nonparametric
      suffix: FLAIR
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_nonparametric
      suffix: inplaneT1
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_nonparametric
      suffix: inplaneT2
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_nonparametric
      suffix: PDT2
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_nonparametric
      suffix: angio
  - provenance: ~
    attributes: *anat_parattr
    bids: &anat_parent_parametric       # See: schema/datatypes/anat.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      run: <<1>>
      suffix: T1map
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: T2map
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: T2starmap
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: R1map
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: R2map
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: R2starmap
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: PDmap
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: MTRmap
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: MTsat
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: UNIT1
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: T1rho
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: MWFmap
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: MTVmap
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: PDT2map
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: Chimap
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: S0map
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_parametric
      suffix: M0map
  - provenance: ~
    attributes: *anat_parattr
    bids: &anat_parent_defacemask       # See: schema/datatypes/anat.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      run: <<1>>
      mod: ~
      suffix: defacemask
  - provenance: ~
    attributes: *anat_parattr
    bids: &anat_parent_multiecho        # See: schema/datatypes/anat.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      run: <<1>>
      echo: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: MESE
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_multiecho
      suffix: MEGRE
  - provenance: ~
    attributes: *anat_parattr
    bids: &anat_parent_multiflip        # See: schema/datatypes/anat.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      run: <<1>>
      flip: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: VFA
  - provenance: ~
    attributes: *anat_parattr
    bids: &anat_parent_multiinv         # See: schema/datatypes/anat.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      run: <<1>>
      inv: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: IRT1
  - provenance: ~
    attributes: *anat_parattr
    bids: &anat_parent_mp2rage          # See: schema/datatypes/anat.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      run: <<1>>
      echo: ~
      flip: ~
      inv: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: MP2RAGE
  - provenance: ~
    attributes: *anat_parattr
    bids: &anat_parent_vfamt            # See: schema/datatypes/anat.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      run: <<1>>
      echo: ~
      flip: ~
      mt: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: MPM
  - provenance: ~
    attributes: *anat_parattr
    bids:
      <<: *anat_parent_vfamt
      suffix: MTS
  - provenance: ~
    attributes: *anat_parattr
    bids: &anat_parent_mtr              # See: schema/datatypes/anat.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      run: <<1>>
      mt: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: MTR

  func:       # ----------------------- All functional runs --------------------
  - provenance: ~
    attributes: &func_parattr
      series_type: ~
      exam_name: ~
      protocol_name: ~
      tech: ~
      diffusion: ~
      fov: ~
      scan_resolution: ~
      scan_mode: ~
      max_slices: ~
      flow_compensation: ~
      max_echoes: ~
      repetition_time: ~
      prep_direction: ~
    bids: &func_parent_func             # See: schema/datatypes/func.yaml
      task: <protocol_name>
      acq: <tech>
      ce: ~
      dir: ~
      rec: ~
      run: <<1>>
      echo: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: bold
    meta:
      TaskName: <protocol_name>
  - provenance: ~
    attributes: *func_parattr
    bids:
      <<: *func_parent_func
      suffix: cbv
    meta:
      TaskName: <protocol_name>
  - provenance: ~
    attributes: *func_parattr
    bids:
      <<: *func_parent_func
      suffix: sbref
    meta:
      TaskName: <protocol_name>
  - provenance: ~
    attributes: *func_parattr
    bids: &func_parent_events           # See: schema/datatypes/func.yaml
      task: ~
      acq: <protocol_name>
      ce: ~
      dir: ~
      rec: ~
      run: <<1>>
      suffix: events
    meta:
      TaskName:
  - provenance: ~
    attributes: *func_parattr
    bids: &func_parent_timeseries       # See: schema/datatypes/func.yaml
      task: ~
      acq: <protocol_name>
      ce: ~
      dir: ~
      rec: ~
      recording: ~
      run: <<1>>
      suffix: physio
    meta:
      TaskName:
  - provenance: ~
    attributes: *func_parattr
    bids:
      <<: *func_parent_timeseries
      suffix: stim
    meta:
      TaskName:

  perf:       # ----------------------- All perfusion runs ---------------------
  - provenance: ~
    attributes: &perf_parattr
      series_type: ~
      exam_name: ~
      protocol_name: ~
      tech: ~
      diffusion: ~
      fov: ~
      scan_resolution: ~
      scan_mode: ~
      max_slices: ~
      flow_compensation: ~
      max_echoes: ~
      repetition_time: ~
      prep_direction: ~
    bids: &perf_parent_group1           # See: schema/datatypes/perf.yaml
      acq: <protocol_name>
      rec: <tech>
      dir: ~
      run: <<1>>
      suffix: asl
  - provenance: ~
    attributes: *perf_parattr
    bids:
      <<: *perf_parent_group1
      suffix: m0scan
  - provenance: ~
    attributes: *perf_parattr
    bids: &perf_parent_group2           # See: schema/datatypes/perf.yaml
      acq: <protocol_name>
      rec: <tech>
      dir: ~
      run: <<1>>
      suffix: aslcontext
  - provenance: ~
    attributes: *perf_parattr
    bids: &perf_parent_group3           # See: schema/datatypes/perf.yaml
      acq: <protocol_name>
      rec: <tech>
      run: <<1>>
      suffix: asllabeling

  dwi:        # ----------------------- All diffusion runs ---------------------
  - provenance: ~
    attributes: &dwi_parattr
      series_type: ~
      exam_name: ~
      protocol_name: ~
      tech: ~
      diffusion: ~
      fov: ~
      scan_resolution: ~
      scan_mode: ~
      max_slices: ~
      flow_compensation: ~
      max_echoes: ~
      repetition_time: ~
      prep_direction: ~
    bids: &dwi_parent_DWI               # See: schema/datatypes/dwi.yaml
      acq: <protocol_name>
      dir: ~
      run: <<1>>
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: dwi
  - provenance: ~
    attributes: *dwi_parattr
    bids: &dwi_parent_sbref             # See: schema/datatypes/dwi.yaml
      acq: <protocol_name>
      dir: ~
      run: <<1>>
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: sbref
  - provenance: ~
    attributes: *dwi_parattr
    bids: &dwi_parent_physio            # Not (yet) in: schema/datatypes/dwi.yaml
      acq: <protocol_name>
      dir: ~
      run: <<1>>
      suffix: physio

  fmap:       # ----------------------- All fieldmap runs ----------------------
  - provenance: ~
    attributes: &fmap_parattr
      series_type: ~
      exam_name: ~
      protocol_name: ~
      tech: ~
      diffusion: ~
      fov: ~
      scan_resolution: ~
      scan_mode: ~
      max_slices: ~
      flow_compensation: ~
      max_echoes: ~
      repetition_time: ~
      prep_direction: ~
    bids: &fmap_parent_fieldmaps        # See: schema/datatypes/fmap.yaml
      acq: <protocol_name>
      run: <<1>>
      suffix: phasediff
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids:
      <<: *fmap_parent_fieldmaps
      suffix: phase1
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids:
      <<: *fmap_parent_fieldmaps
      suffix: phase2
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids:
      <<: *fmap_parent_fieldmaps
      suffix: magnitude1
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids:
      <<: *fmap_parent_fieldmaps
      suffix: magnitude2
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids:
      <<: *fmap_parent_fieldmaps
      suffix: magnitude
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids:
      <<: *fmap_parent_fieldmaps
      suffix: fieldmap
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids: &fmap_parent_PEPolar          # See: schema/datatypes/fmap.yaml
      acq: <protocol_name>
      ce: ~
      dir: ~
      run: <<1>>
      suffix: epi
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids:
      <<: *fmap_parent_PEPolar
      suffix: m0scan
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids: &fmap_parent_TB1DAM           # See: schema/datatypes/fmap.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      flip: ~
      inv: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      run: <<1>>
      suffix: TB1DAM
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids: &fmap_parent_TB1EPI           # See: schema/datatypes/fmap.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      flip: ~
      echo: ~
      inv: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      run: <<1>>
      suffix: TB1EPI
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids: &fmap_parent_RFFieldMaps      # See: schema/datatypes/fmap.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      flip: ~
      echo: ~
      inv: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      run: <<1>>
      suffix: TB1AFI
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids:
      <<: *fmap_parent_RFFieldMaps      # See: schema/datatypes/fmap.yaml
      suffix: TB1TFL
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids:
      <<: *fmap_parent_RFFieldMaps      # See: schema/datatypes/fmap.yaml
      suffix: TB1RFM
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids:
      <<: *fmap_parent_RFFieldMaps      # See: schema/datatypes/fmap.yaml
      suffix: RB1COR
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids: &fmap_parent_TB1SRGE          # See: schema/datatypes/fmap.yaml
      acq: <protocol_name>
      ce: ~
      rec: ~
      flip: ~
      echo: ~
      inv: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      run: <<1>>
      suffix: TB1SRGE
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids: &fmap_parent_parametric
      acq: <protocol_name>
      ce: ~
      rec: ~
      run: <<1>>
      suffix: TB1map
    meta:
      IntendedFor: ~
  - provenance: ~
    attributes: *fmap_parattr
    bids:
      <<: *fmap_parent_parametric
      suffix: RB1map
    meta:
      IntendedFor: ~

  eeg: ~      # ----------------------- All EEG data ---------------------------

  ieeg: ~     # ----------------------- All iEEG data --------------------------

  meg: ~      # ----------------------- All MEG data ---------------------------

  beh: ~      # ----------------------- All behavioural data -------------------

  pet: ~      # ----------------------- All PET runs ---------------------------

  extra_data: # ----------------------- All extra data -------------------------
  - provenance: ~
    attributes:
      series_type: ~
      exam_name: ~
      protocol_name: ~
      tech: ~
      diffusion: ~
      fov: ~
      scan_resolution: ~
      scan_mode: ~
      max_slices: ~
      flow_compensation: ~
      max_echoes: ~
      repetition_time: ~
      prep_direction: ~
    bids:
      acq: <protocol_name>
      inv: ~
      rec: <tech>
      ce: ~
      task: ~
      echo: ~
      dir: ~
      run: <<1>>
      mod: ~
      part: ['', 'mag', 'phase', 'real', 'imag', 0]
      suffix: ~

  exclude:    # ----------------------- Data that will be left out -------------
  - provenance: ~
    attributes:
      series_type: ~
      exam_name: ~
      protocol_name: ~
      tech: ~
      diffusion: ~
      fov: ~
      scan_resolution: ~
      scan_mode: ~
      max_slices: ~
      flow_compensation: ~
      max_echoes: ~
      repetition_time: ~
      prep_direction: ~
    bids:
      acq: <protocol_name><exam_name>
      rec: <tech>
      suffix: <series_type>
