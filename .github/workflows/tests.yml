name: Pytests
on:
  push:
    paths-ignore:
      - 'docs/**'
      - '.github/**'
      - '**.rst'
      - '**.md'
      - 'apptainer.def'
      - 'Dockerfile'
      - '.readthedocs.yaml'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '.github/**'
      - '**.rst'
      - '**.md'
      - 'apptainer.def'
      - 'Dockerfile'
      - '.readthedocs.yaml'

jobs:
  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: ['3.9', '3.13']
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .[all] pytest

      - name: Install dcm2niix posix
        if: runner.os != 'Windows'
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt update && sudo apt install qt6-base-dev
            mkdir dcm2niix_install/ && cd dcm2niix_install/
            curl -fLO https://github.com/rordenlab/dcm2niix/releases/latest/download/dcm2niix_lnx.zip
            unzip dcm2niix*.zip
            echo "${{ github.workspace }}/dcm2niix_install/" >> $GITHUB_PATH
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install dcm2niix
          fi

      - name: Install dcm2niix windows
        if: runner.os == 'Windows'
        run: |
          curl -fLO https://github.com/rordenlab/dcm2niix/releases/latest/download/dcm2niix_win.zip
          Expand-Archive dcm2niix_win.zip
          Add-Content $env:GITHUB_PATH "${{ github.workspace }}/dcm2niix_win/"

      - name: Tests with pytest
        run: |
          pytest tests
        env:
          DUECREDIT_ENABLE: no
