Bootstrap: docker
From: python:3.10-slim
Stage: builder

%post
    # Install the latest dcm2niix release from the base repository (= typically outdated)
    # apt update && apt -y install dcm2niix

    # Install the latest dcm2niix from sources
    apt update && apt -y install git build-essential cmake
    git clone https://github.com/rordenlab/dcm2niix.git
    cd dcm2niix; mkdir build && cd build
    cmake -DZLIB_IMPLEMENTATION=Cloudflare -DUSE_JPEGLS=ON -DUSE_OPENJPEG=ON ..
    make install


Bootstrap: docker
From: python:3.10-slim
Stage: final

%help
    This BIDScoin Apptainer image includes:

    * Debian stable,
    * The latest stable release (v4.3.0+qt5) of BIDScoin
    * The latest versions of dcm2niix, pydeface, spec2nii

    The general form to run BIDScoin commands is:

        apptainer exec bidscoin.sif <bidscoin_tool> <bidscoin_tool_args>

    For more information run:

        apptainer run bidscoin.sif

    NB: 1) To run GUI applications (such as the bidseditor) you probably need to run `xhost +` first
        2) In the commands above, Singularity users should replace `apptainer` with `singularity`
        3) The current image does not include the Freesurfer/synthstrip software (needed for `skullstrip`)

%files from builder
    # Install dcm2niix. NB: Obsolete with the new `pip install bidscoin[dcm2niix2bids]` extras option
    /usr/local/bin/dcm2niix /usr/local/bin/dcm2niix

%environment
    export PIP_NO_CACHE_DIR=off
    export FSLDIR=/opt/miniconda3 FSLOUTPUTTYPE=NIFTI_GZ
    export PATH=/opt/miniconda3/bin:$PATH

%post
    # Install curl (sometimes needed by dcm2niix) and pigz (to speed up dcm2niix)
    apt update && apt -y --no-install-recommends install pigz curl

    # Install the latest stable BIDScoin Qt5 release from Github (install the normal Qt6 branch from PyPi when using recent base images such as Ubuntu:22.04)
    # NOTE: PyQt5 is installed as Debian package to solve dependencies issues occurring when installed with pip
    apt -y --no-install-recommends install python3-pyqt5 python3-pyqt5.qtx11extras git && apt clean     # Add build-essential for newer python:3-slim base images (pip needs gcc)
    pip install bidscoin[spec2nii2bids,deface]@git+https://github.com/Donders-Institute/bidscoin@v4.3.0+qt5

    # Uncomment the line below if you get errors like: ImportError: libQt5Core.so.5: cannot open shared object file: No such file or directory
    # strip --remove-section=.note.ABI-tag /usr/lib/x86_64-linux-gnu/libQt5Core.so.5

    # Install the latest miniconda (needed for FSL install). NB: Keep the version the same as the Docker base image (currently Miniconda3-latest == py311)
    mkdir -p /opt/miniconda3
    curl https://repo.anaconda.com/miniconda/Miniconda3-py310_23.11.0-2-Linux-x86_64.sh --output /opt/miniconda3/miniconda.sh
    bash /opt/miniconda3/miniconda.sh -b -u -p /opt/miniconda3
    rm -rf /opt/miniconda3/miniconda.sh
    export PATH=/opt/miniconda3/bin:$PATH

    # Install FSL tools
    conda config --set channel_priority strict      # Needed for pngappend, see: https://github.com/NeuroDesk/neurocontainers/pull/598
    conda install -c conda-forge -c https://fsl.fmrib.ox.ac.uk/fsldownloads/fslconda/public/ fsl-libvis fsl-avwutils fsl-flirt

    # Finally, create the necessary links and cache to the most recent shared libraries (= best practise)
    ldconfig

%runscript
    exec bidscoin --help
